package com.pontualiot.demo.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.pontualiot.demo.service.AttendanceService;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.web.servlet.MockMvc;

import java.util.UUID;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@WebMvcTest(AttendanceController.class)
class AttendanceControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @Autowired
    private ObjectMapper objectMapper;

    @MockBean
    private AttendanceService attendanceService;

    @Test
    @WithMockUser
    void recordAttendance_ShouldReturnCreated() throws Exception {
        UUID eventId = UUID.randomUUID();
        when(attendanceService.recordEvent(any())).thenReturn(eventId);

        String requestBody = """
            {
                "deviceId": "550e8400-e29b-41d4-a716-446655440000",
                "employeeId": "550e8400-e29b-41d4-a716-446655440001",
                "eventType": "CHECK_IN",
                "eventTime": "2025-10-17T10:00:00-03:00"
            }
            """;

        mockMvc.perform(post("/api/attendance/events")
                .contentType(MediaType.APPLICATION_JSON)
                .content(requestBody)
                .with(csrf()))
            .andExpect(status().isCreated())
            .andExpect(jsonPath("$.eventId").value(eventId.toString()))
            .andExpect(jsonPath("$.status").value("SUCCESS"));
    }

    @Test
    @WithMockUser
    void recordAttendance_ShouldValidateRequiredFields() throws Exception {
        String requestBody = """
            {
                "deviceId": "550e8400-e29b-41d4-a716-446655440000",
                "eventType": "CHECK_IN"
            }
            """;

        mockMvc.perform(post("/api/attendance/events")
                .contentType(MediaType.APPLICATION_JSON)
                .content(requestBody)
                .with(csrf()))
            .andExpect(status().isBadRequest());
    }
}